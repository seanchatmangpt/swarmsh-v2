groups:
  - id: swarmsh.worktree
    type: span
    brief: "SwarmSH v2 Worktree Management Operations"
    note: |
      Git worktree lifecycle operations with SwarmSH coordination patterns.
      Supports zero-conflict guarantees and nanosecond-precision coordination.
    attributes:
      - id: swarmsh.worktree.name
        type: string
        brief: "Name of the worktree"
        examples: ["feature-branch", "hotfix-123", "experiment-ai"]
        requirement_level: required
        
      - id: swarmsh.worktree.path
        type: string
        brief: "Filesystem path to the worktree"
        examples: ["/workspace/feature-branch", "../hotfix-123"]
        requirement_level: required
        
      - id: swarmsh.worktree.branch
        type: string
        brief: "Git branch associated with the worktree"
        examples: ["feature/new-ui", "hotfix/security-patch", "main"]
        requirement_level: required
        
      - id: swarmsh.worktree.status
        type: string
        brief: "Current operational status of the worktree"
        examples: ["active", "idle", "coordinating", "syncing", "failed"]
        requirement_level: required
        
      - id: swarmsh.worktree.coordination_pattern
        type: string
        brief: "Coordination pattern applied to this worktree"
        examples: ["scrum_at_scale", "roberts_rules", "realtime", "atomic"]
        requirement_level: recommended
        
      - id: swarmsh.worktree.operation
        type: string
        brief: "Worktree operation being performed"
        examples: ["create", "remove", "sync", "backup", "restore", "coordinate"]
        requirement_level: required
        
      - id: swarmsh.worktree.agent_count
        type: int
        brief: "Number of agents assigned to this worktree"
        examples: [1, 3, 5]
        requirement_level: recommended
        
      - id: swarmsh.worktree.coordination_epoch
        type: int
        brief: "Nanosecond timestamp for coordination ordering"
        examples: [1640995200000000000, 1640995201000000000]
        requirement_level: required
        
      - id: swarmsh.worktree.disk_usage_mb
        type: int
        brief: "Disk space usage in megabytes"
        examples: [150, 2048, 512]
        requirement_level: recommended
        
      - id: swarmsh.worktree.commits_count
        type: int
        brief: "Total number of commits in the worktree"
        examples: [42, 156, 1024]
        requirement_level: recommended
        
      - id: swarmsh.worktree.sync_frequency_hours
        type: double
        brief: "Average sync frequency in hours"
        examples: [2.5, 24.0, 0.5]
        requirement_level: recommended
        
      - id: swarmsh.worktree.auto_sync
        type: boolean
        brief: "Whether automatic synchronization is enabled"
        examples: [true, false]
        requirement_level: recommended
        
      - id: swarmsh.worktree.backup_enabled
        type: boolean
        brief: "Whether backup is enabled for this worktree"
        examples: [true, false]
        requirement_level: recommended

  - id: swarmsh.worktree.lifecycle
    type: span
    brief: "Worktree lifecycle operations"
    note: |
      Spans for complete worktree lifecycle: creation, coordination, 
      synchronization, backup, and cleanup operations.
    attributes:
      - ref: swarmsh.worktree.name
      - ref: swarmsh.worktree.operation
      - ref: swarmsh.worktree.coordination_epoch
      - id: swarmsh.worktree.lifecycle.phase
        type: string
        brief: "Current phase of the lifecycle operation"
        examples: ["initializing", "validating", "executing", "completing", "error"]
        requirement_level: required
        
      - id: swarmsh.worktree.lifecycle.duration_ms
        type: int
        brief: "Duration of the lifecycle operation in milliseconds"
        examples: [150, 2500, 45000]
        requirement_level: recommended
        
      - id: swarmsh.worktree.lifecycle.success
        type: boolean
        brief: "Whether the lifecycle operation completed successfully"
        examples: [true, false]
        requirement_level: recommended

  - id: swarmsh.worktree.coordination
    type: span
    brief: "Worktree coordination operations"
    note: |
      Multi-worktree coordination using SwarmSH patterns including
      Scrum at Scale, Roberts Rules, real-time, and atomic coordination.
    attributes:
      - ref: swarmsh.worktree.coordination_pattern
      - ref: swarmsh.worktree.coordination_epoch
      - id: swarmsh.worktree.coordination.participant_count
        type: int
        brief: "Number of worktrees participating in coordination"
        examples: [2, 5, 12]
        requirement_level: recommended
        
      - id: swarmsh.worktree.coordination.consensus_required
        type: boolean
        brief: "Whether consensus is required for the coordination decision"
        examples: [true, false]
        requirement_level: recommended
        
      - id: swarmsh.worktree.coordination.voting_threshold
        type: double
        brief: "Voting threshold for Roberts Rules coordination (0.0-1.0)"
        examples: [0.5, 0.67, 0.75]
        requirement_level: recommended
        
      - id: swarmsh.worktree.coordination.latency_ms
        type: int
        brief: "Coordination latency in milliseconds"
        examples: [5, 150, 1000]
        requirement_level: recommended

  - id: swarmsh.worktree.ai_integration
    type: span
    brief: "AI-enhanced worktree operations"
    note: |
      AI decision making and optimization for worktree management,
      including work distribution and performance optimization.
    attributes:
      - ref: swarmsh.worktree.name
      - id: swarmsh.worktree.ai.decision_type
        type: string
        brief: "Type of AI decision being made"
        examples: ["work_assignment", "optimization", "coordination", "cleanup"]
        requirement_level: required
        
      - id: swarmsh.worktree.ai.confidence
        type: double
        brief: "AI confidence level (0.0-1.0)"
        examples: [0.85, 0.92, 0.67]
        requirement_level: recommended
        
      - id: swarmsh.worktree.ai.recommendation_count
        type: int
        brief: "Number of AI recommendations generated"
        examples: [3, 7, 1]
        requirement_level: recommended
        
      - id: swarmsh.worktree.ai.optimization_target
        type: string
        brief: "Target metric for AI optimization"
        examples: ["disk_usage", "sync_frequency", "agent_utilization", "coordination_latency"]
        requirement_level: recommended

  - id: swarmsh.worktree.metrics
    type: metric_group
    brief: "Worktree performance metrics"
    note: |
      Key performance indicators for worktree operations including
      throughput, efficiency, and resource utilization metrics.
    metrics:
      - id: swarmsh.worktree.operations.count
        type: counter
        brief: "Total number of worktree operations performed"
        unit: "1"
        
      - id: swarmsh.worktree.operations.duration
        type: histogram
        brief: "Duration of worktree operations"
        unit: "ms"
        
      - id: swarmsh.worktree.disk_usage
        type: gauge
        brief: "Current disk usage across all worktrees"
        unit: "MB"
        
      - id: swarmsh.worktree.sync.frequency
        type: gauge
        brief: "Average synchronization frequency"
        unit: "h"
        
      - id: swarmsh.worktree.coordination.latency
        type: histogram
        brief: "Coordination operation latency"
        unit: "ms"
        
      - id: swarmsh.worktree.agent.utilization
        type: gauge
        brief: "Agent utilization across worktrees"
        unit: "1"
        
      - id: swarmsh.worktree.ai.decisions
        type: counter
        brief: "Number of AI decisions made for worktree operations"
        unit: "1"
        
      - id: swarmsh.worktree.conflicts.resolved
        type: counter
        brief: "Number of coordination conflicts resolved"
        unit: "1"

  - id: swarmsh.worktree.health
    type: attribute_group
    brief: "Worktree health monitoring attributes"
    note: |
      Health status and monitoring attributes for worktree operations
      including bottleneck detection and performance degradation alerts.
    attributes:
      - id: swarmsh.worktree.health.status
        type: string
        brief: "Overall health status of the worktree"
        examples: ["healthy", "degraded", "critical", "failed"]
        requirement_level: required
        
      - id: swarmsh.worktree.health.bottleneck_detected
        type: boolean
        brief: "Whether a performance bottleneck has been detected"
        examples: [true, false]
        requirement_level: recommended
        
      - id: swarmsh.worktree.health.bottleneck_type
        type: string
        brief: "Type of bottleneck detected"
        examples: ["disk_io", "network", "coordination", "cpu"]
        requirement_level: recommended
        
      - id: swarmsh.worktree.health.uptime_percentage
        type: double
        brief: "Worktree uptime percentage"
        examples: [99.9, 95.5, 87.2]
        requirement_level: recommended
        
      - id: swarmsh.worktree.health.last_check_timestamp
        type: int
        brief: "Timestamp of last health check (nanoseconds since epoch)"
        examples: [1640995200000000000]
        requirement_level: required